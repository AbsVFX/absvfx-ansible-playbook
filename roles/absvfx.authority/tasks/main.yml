---
- name: create authority directory
  file:
    path: "{{ root_authority_directory }}"
    state: directory
  tags:
    - create_ca

- name: create authority sub-directories
  file:
    path: "{{ root_authority_directory }}/{{ item }}"
    state: directory
  tags:
    - create_ca
  loop:
    - certs
    - crl
    - newcerts

- name: create authority sub-directories
  file:
    path: "{{ root_authority_directory }}/{{ item }}"
    state: directory
    mode: 0700
  tags:
    - create_ca
  loop:
    - private

- name: create initial auth id
  file:
    path: "{{ root_authority_directory }}/index.txt"
    state: touch
  tags:
    - create_ca

- name: create initial serial id
  copy:
    dest: "{{ root_authority_directory }}/serial"
    content: 1000
  tags:
    - create_ca

- name: build root ca configuration file
  template:
    src: openssl.cnf.j2
    dest: "{{ root_authority_directory }}/openssl.cnf"
  tags:
    - create_ca

- name: generate ca key
  shell: "openssl genrsa -aes256 -passout pass:{{ nzb_tertiary_newsserver_password }} -out {{ root_authority_directory }}/private/ca.key.pem 4096"
  tags:
    - create_ca

- name: generate ca request cert
  shell: "openssl req -config {{ root_authority_directory }}/openssl.cnf -key {{ root_authority_directory }}/private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -passin pass:{{ nzb_tertiary_newsserver_password }} -subj \"/C={{ root_authority_country }}/ST={{ root_authority_state }}/O={{ root_authority_organization }}/CN={{ root_authority_hostname }}\" -out {{ root_authority_directory }}/certs/ca.cert.pem"
  tags:
    - create_ca

### INTERMEDIATE CERT
- name: create authority directory
  file:
    path: "{{ root_authority_directory }}/intermediate"
    state: directory
  tags:
    - create_ca

- name: create authority sub-directories
  file:
    path: "{{ root_authority_directory }}/intermediate/{{ item }}"
    state: directory
  tags:
    - create_ca
  loop:
    - certs
    - crl
    - newcerts

- name: create authority sub-directories
  file:
    path: "{{ root_authority_directory }}/intermediate/{{ item }}"
    state: directory
    mode: 0700
  tags:
    - create_ca
  loop:
    - private

- name: create initial auth id
  file:
    path: "{{ root_authority_directory }}/intermediate/index.txt"
    state: touch
  tags:
    - create_ca

- name: create initial serial id
  copy:
    dest: "{{ root_authority_directory }}/intermediate/serial"
    content: 1000
  tags:
    - create_ca

- name: build root ca configuration file
  template:
    src: openssl.cnf.j2
    dest: "{{ root_authority_directory }}/intermediate/openssl.cnf"
  tags:
    - create_ca

- name: generate ca key
  shell: "openssl genrsa -aes256 -passout pass:{{ nzb_tertiary_newsserver_password }} -out {{ root_authority_directory }}/intermediate/private/ca.key.pem 4096"
  tags:
    - create_ca

- name: generate ca request cert
  shell: "openssl req -config {{ root_authority_directory }}/intermediate/openssl.cnf -key {{ root_authority_directory }}/intermediate/private/ca.key.pem -new -x509 -days 7300 -sha256 -extensions v3_ca -passin pass:{{ nzb_tertiary_newsserver_password }} -subj \"/C={{ root_authority_country }}/ST={{ root_authority_state }}/O={{ root_authority_organization }}/CN={{ root_authority_hostname }}\" -out {{ root_authority_directory }}/intermediate/certs/ca.cert.pem"    
  tags:
    - create_ca

- name: combine ca cert
  shell: "cat {{ root_authority_directory }}/intermediate/certs/ca.cert.pem {{ root_authority_directory }}/certs/ca.cert.pem > {{ root_authority_directory }}/intermediate/certs/ca-chain.cert.pem"
  tags:
    - create_ca

# GENERATE SSL CERTIFICATE
- name: select authority to use
  set_fact:
    target_authority_node: "{{ item }}"
  with_random_choice: "{{ groups['authority'] }}"

- name: generate ssl certificate keys
  openssl_privatekey:
    path: "{{ root_authority_directory }}/intermediate/certs/{{ inventory_hostname }}.key.pem"
    size: 2048
  delegate_to: "{{ target_authority_node }}"
  tags:
    - generate_certs

- name: generate ssl certificate requests
  openssl_csr:
    path: "{{ root_authority_directory }}/intermediate/certs/{{ inventory_hostname }}.csr.pem"
    privatekey_path: "{{ root_authority_directory }}/intermediate/certs/{{ inventory_hostname }}.key.pem"
    country_name: "{{ root_authority_country }}"
    organization_name: "{{ root_authority_organization }}"
    common_name: "{{ inventory_hostname }}"
  delegate_to: "{{ target_authority_node }}"
  tags:
    - generate_certs

- name: generate ssl certificate
  openssl_certificate:
    path: "{{ root_authority_directory }}/intermediate/newcerts/{{ inventory_hostname }}.crt"
    csr_path: "{{ root_authority_directory }}/intermediate/certs/{{ inventory_hostname }}.csr.pem"
    ownca_path: "{{ root_authority_directory }}/intermediate/certs/ca-chain.cert.pem"
    ownca_privatekey_path: "{{ root_authority_directory }}/intermediate/private/ca.key.pem"
    ownca_privatekey_passphrase: "{{ nzb_tertiary_newsserver_password }}"
    provider: ownca
  delegate_to: "{{ target_authority_node }}"
  tags:
    - generate_certs

- name: create directory structure if missing
  file:
    path: "/etc/absvfx/ssl/certs"
    state: directory

- name: transfer ca certificate
  synchronize:
    src: "{{ root_authority_directory }}/intermediate/certs/ca-chain.cert.pem"
    dest: "/etc/absvfx/ssl/certs/ca.crt"
  delegate_to: "{{ target_authority_node }}"
  tags:
    - generate_certs

- name: transfer ssl key
  synchronize:
    src: "{{ root_authority_directory }}/intermediate/certs/{{ inventory_hostname }}.key.pem"
    dest: "/etc/absvfx/ssl/certs/{{ inventory_hostname }}.key"
  delegate_to: "{{ target_authority_node }}"
  tags:
    - generate_certs

- name: transfer ssl certificate
  synchronize:
    src: "{{ root_authority_directory }}/intermediate/newcerts/{{ inventory_hostname }}.crt"
    dest: "/etc/absvfx/ssl/certs/{{ inventory_hostname }}.crt"
  delegate_to: "{{ target_authority_node }}"
  tags:
    - generate_certs

- name: set certificate permissions
  file:
    path: "/etc/absvfx/ssl/certs/{{ item }}"
    owner: root
    group: root
    mode: '1755'
  loop:
    - "{{ inventory_hostname }}.crt"
    - "{{ inventory_hostname }}.key"
    - "ca.crt"
